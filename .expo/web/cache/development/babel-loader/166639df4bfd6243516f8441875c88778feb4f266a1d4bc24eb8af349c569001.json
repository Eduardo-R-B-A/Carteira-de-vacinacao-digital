{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport UserRegistrationScreen from \"./screens/UserRegistrationScreen\";\nimport HealthProfessionalRegistrationScreen from \"./screens/HealthProfessionalRegistrationScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar loginButtonColor = 'blue';\nvar registerButtonColor = 'green';\nvar forgotPasswordButtonColor = 'orange';\nvar Stack = createStackNavigator();\nfunction HomeScreen(_ref) {\n  var username = _ref.username,\n    setUsername = _ref.setUsername,\n    setPassword = _ref.setPassword,\n    handleLogin = _ref.handleLogin,\n    loggedIn = _ref.loggedIn;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \" Carteira de Vacina\\xE7\\xE3o Digital \"\n    }), _jsx(Image, {\n      source: require(\"./assets/logo.png\"),\n      style: styles.logo\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Username\",\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, {\n        width: '80%',\n        backgroundColor: loginButtonColor\n      }],\n      onPress: function onPress() {\n        return handleLogin(username, password);\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \" Login \"\n      })\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.button, {\n          width: '40%',\n          backgroundColor: registerButtonColor\n        }],\n        onPress: function onPress() {\n          return console.log('Cadastrar');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \" Cadastrar \"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, {\n          backgroundColor: forgotPasswordButtonColor\n        }],\n        onPress: function onPress() {\n          return console.log('Recuperar senha');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \" Recuperar senha \"\n        })\n      })]\n    }), loggedIn && _jsx(Text, {\n      style: styles.loggedInText,\n      children: \"Voc\\xEA est\\xE1 logado.\"\n    })]\n  });\n}\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loggedIn = _useState6[0],\n    setLoggedIn = _useState6[1];\n  var handleLogin = function handleLogin(username, password) {\n    if (username === 'admin' && password === 'password') {\n      setLoggedIn(true);\n    } else {\n      setError('Nome de usuário ou senha incorretos.');\n    }\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        children: function children() {\n          return _jsx(HomeScreen, {\n            username: username,\n            setUsername: setUsername,\n            setPassword: setPassword,\n            handleLogin: handleLogin,\n            loggedIn: loggedIn\n          });\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"UserRegistration\",\n        component: UserRegistrationScreen\n      }), _jsx(Stack.Screen, {\n        name: \"HealthProfessionalRegistration\",\n        component: HealthProfessionalRegistrationScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 20,\n    width: '80%'\n  },\n  logo: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    marginTop: 20,\n    marginBottom: 20\n  },\n  headerText: {\n    fontSize: 23,\n    textAlign: 'center',\n    marginVertical: 20,\n    color: '#0D0D0D'\n  }\n});","map":{"version":3,"names":["StatusBar","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","Image","NavigationContainer","createStackNavigator","UserRegistrationScreen","HealthProfessionalRegistrationScreen","jsx","_jsx","jsxs","_jsxs","loginButtonColor","registerButtonColor","forgotPasswordButtonColor","Stack","HomeScreen","_ref","username","setUsername","setPassword","handleLogin","loggedIn","style","styles","container","children","headerText","source","require","logo","input","placeholder","onChangeText","text","value","secureTextEntry","password","button","width","backgroundColor","onPress","buttonText","buttonContainer","console","log","loggedInText","App","_useState","_useState2","_slicedToArray","_useState3","_useState4","_useState5","_useState6","setLoggedIn","setError","Navigator","Screen","name","component","create","flex","alignItems","justifyContent","padding","borderWidth","borderColor","marginBottom","borderRadius","marginTop","color","fontWeight","textAlign","flexDirection","marginVertical","height","resizeMode","alignSelf","fontSize"],"sources":["/home/eduardo/Documents/my-app/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\nimport { Image } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport UserRegistrationScreen from './screens/UserRegistrationScreen';\nimport HealthProfessionalRegistrationScreen from './screens/HealthProfessionalRegistrationScreen';\n\nconst loginButtonColor = 'blue';\nconst registerButtonColor = 'green';\nconst forgotPasswordButtonColor = 'orange';\n\nconst Stack = createStackNavigator();\n\nfunction HomeScreen({ username, setUsername, setPassword, handleLogin, loggedIn }) {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}> Carteira de Vacinação Digital </Text>\n      <Image source={require('./assets/logo.png')} style={styles.logo} />\n      <StatusBar style=\"auto\" />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Username\"\n        onChangeText={(text) => setUsername(text)}\n        value={username}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry={true}\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n      />\n\n      <TouchableOpacity\n        style={[styles.button, { width: '80%', backgroundColor: loginButtonColor }]}\n        onPress={() => handleLogin(username, password)}\n      >\n        <Text style={styles.buttonText}> Login </Text>\n      </TouchableOpacity>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity style={[styles.button, { width: '40%', backgroundColor: registerButtonColor }]} onPress={() => console.log('Cadastrar')}>\n          <Text style={styles.buttonText}> Cadastrar </Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={[styles.button, { backgroundColor: forgotPasswordButtonColor }]} onPress={() => console.log('Recuperar senha')}>\n          <Text style={styles.buttonText}> Recuperar senha </Text>\n        </TouchableOpacity>\n      </View>\n\n      {loggedIn && (\n        <Text style={styles.loggedInText}>Você está logado.</Text>\n      )}\n    </View>\n  );\n}\n\nexport default function App() {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const handleLogin = (username, password) => {\n    if (username === 'admin' && password === 'password') {\n      setLoggedIn(true);\n    } else {\n      setError('Nome de usuário ou senha incorretos.');\n    }\n  };\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\">\n          {() => <HomeScreen username={username} setUsername={setUsername} setPassword={setPassword} handleLogin={handleLogin} loggedIn={loggedIn} />}\n        </Stack.Screen>\n\n        <Stack.Screen name=\"UserRegistration\" component={UserRegistrationScreen} />\n        <Stack.Screen name=\"HealthProfessionalRegistration\" component={HealthProfessionalRegistrationScreen} />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    marginBottom: 10,\n},\nbutton: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n},\nbuttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    textAlign: 'center',\n},\nbuttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginVertical: 20,\n    width: '80%',\n},\nlogo: {\n    width: 150,\n    height: 150,\n    resizeMode: 'contain',\n    alignSelf: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n},\nheaderText: {\n  fontSize: 23,\n  textAlign: 'center',\n  marginVertical: 20,\n  color: '#0D0D0D',\n},\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}