{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HealthProfessionalRegistrationScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var handleRegister = function handleRegister() {\n    if (password !== confirmPassword) {\n      alert('As senhas não coincidem. Por favor, verifique novamente.');\n    } else {}\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome Completo\",\n      onChangeText: function onChangeText(text) {\n        return setName(text);\n      },\n      value: name\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"E-mail\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirmar Senha\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      },\n      value: confirmPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Cadastrar Profissional\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    width: '80%',\n    height: 50,\n    backgroundColor: '#eee',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    marginVertical: 8\n  },\n  button: {\n    width: '80%',\n    height: 50,\n    backgroundColor: '#1e90ff',\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 16\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","HealthProfessionalRegistrationScreen","_useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","handleRegister","alert","style","styles","container","children","input","placeholder","onChangeText","text","value","secureTextEntry","button","onPress","buttonText","create","flex","alignItems","justifyContent","width","height","backgroundColor","borderRadius","paddingHorizontal","marginVertical","marginTop","color","fontSize","fontWeight"],"sources":["/home/eduardo/Documents/my-app/screens/HealthProfessionalRegistrationScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\n\nexport default function HealthProfessionalRegistrationScreen() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleRegister = () => {\n    if (password !== confirmPassword) {\n      alert('As senhas não coincidem. Por favor, verifique novamente.');\n    } else {\n      // complete the else statement here\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nome Completo\"\n        onChangeText={text => setName(text)}\n        value={name}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"E-mail\"\n        onChangeText={text => setEmail(text)}\n        value={email}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Senha\"\n        secureTextEntry\n        onChangeText={text => setPassword(text)}\n        value={password}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirmar Senha\"\n        secureTextEntry\n        onChangeText={text => setConfirmPassword(text)}\n        value={confirmPassword}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\n        <Text style={styles.buttonText}>Cadastrar Profissional</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '80%',\n    height: 50,\n    backgroundColor: '#eee',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    marginVertical: 8,\n  },\n  button: {\n    width: '80%',\n    height: 50,\n    backgroundColor: '#1e90ff',\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 16,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}