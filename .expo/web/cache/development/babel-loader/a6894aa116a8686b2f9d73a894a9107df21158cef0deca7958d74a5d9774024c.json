{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function UserRegistrationScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    confirmPassword = _useState8[0],\n    setConfirmPassword = _useState8[1];\n  var handleRegister = function handleRegister() {\n    if (password !== confirmPassword) {\n      alert('As senhas não coincidem. Por favor, verifique novamente.');\n    } else {\n      alert('Usuário cadastrado com sucesso!');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.headerText,\n      children: \" Cadastro de Usu\\xE1rio \"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome de Usu\\xE1rio\",\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      value: username\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"E-mail\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirme a senha\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      },\n      value: confirmPassword\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRegister,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \" Cadastrar \"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    marginBottom: 10\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  headerText: {\n    fontSize: 23,\n    textAlign: 'center',\n    marginVertical: 20,\n    color: '#0D0D0D'\n  }\n});","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","UserRegistrationScreen","_useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","handleRegister","alert","style","styles","container","children","headerText","input","placeholder","onChangeText","text","value","secureTextEntry","button","onPress","buttonText","create","flex","backgroundColor","alignItems","justifyContent","width","padding","borderWidth","borderColor","marginBottom","borderRadius","marginTop","color","fontWeight","textAlign","fontSize","marginVertical"],"sources":["/home/eduardo/Documents/my-app/screens/UserRegistrationScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity } from 'react-native';\n\nexport default function UserRegistrationScreen() {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const handleRegister = () => {\n    if (password !== confirmPassword) {\n      alert('As senhas não coincidem. Por favor, verifique novamente.');\n    } else {\n      // aqui você pode adicionar a lógica para cadastrar o usuário\n      // depois de cadastrado, você pode redirecionar o usuário para outra tela ou exibir uma mensagem de sucesso\n      alert('Usuário cadastrado com sucesso!');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.headerText}> Cadastro de Usuário </Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Nome de Usuário\"\n        onChangeText={(text) => setUsername(text)}\n        value={username}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"E-mail\"\n        onChangeText={(text) => setEmail(text)}\n        value={email}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Senha\"\n        secureTextEntry={true}\n        onChangeText={(text) => setPassword(text)}\n        value={password}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirme a senha\"\n        secureTextEntry={true}\n        onChangeText={(text) => setConfirmPassword(text)}\n        value={confirmPassword}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleRegister}>\n        <Text style={styles.buttonText}> Cadastrar </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    marginBottom: 10,\n  },\n  button: {\n    backgroundColor: 'blue',\n    padding: 10,\n    borderRadius: 5,\n    marginTop: 10,\n  },\n  buttonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  headerText: {\n    fontSize: 23,\n    textAlign: 'center',\n    marginVertical: 20,\n    color: '#0D0D0D',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}